#!/usr/bin/make -f

# Check if local Rust environment is available
ifneq (,$(wildcard $(HOME)/.cargo/env))
RUST_ENV = . $(HOME)/.cargo/env && rustup default stable &&
else
RUST_ENV =
endif

export CARGO_HOME=$(CURDIR)
export CARGO_TARGET_DIR=$(CURDIR)/target

%:
	dh $@

override_dh_auto_clean:
	@echo "CARGO_HOME=$(CARGO_HOME)"
	@echo "CARGO_TARGET_DIR=$(CARGO_TARGET_DIR)"
	@echo "Config file:"
	@cat $(CARGO_HOME)/config.toml
	@echo "Vendor directory contents before clean:"
	@ls $(CARGO_HOME)/vendor
	$(RUST_ENV) export CARGO_HOME=$(CARGO_HOME) && export CARGO_TARGET_DIR=$(CARGO_TARGET_DIR) && cargo clean --offline

override_dh_auto_build:
	@echo "CARGO_HOME=$(CARGO_HOME)"
	@echo "CARGO_TARGET_DIR=$(CARGO_TARGET_DIR)"
	@echo "Config file:"
	@cat $(CARGO_HOME)/config.toml
	@echo "Vendor directory contents before build:"
	@ls $(CARGO_HOME)/vendor
	$(RUST_ENV) export CARGO_HOME=$(CARGO_HOME) && export CARGO_TARGET_DIR=$(CARGO_TARGET_DIR) && cargo build --release --offline
	strip --strip-unneeded target/release/himmelblaud
	strip --strip-unneeded target/release/himmelblaud_tasks
	cp target/release/libnss_himmelblau.so target/release/libnss_himmelblau.so.2
	cp target/release/libpam_himmelblau.so target/release/pam_himmelblau.so
	patchelf --set-soname libnss_himmelblau.so.2 target/release/libnss_himmelblau.so.2
	strip --strip-unneeded target/release/libnss_himmelblau.so.2
	strip --strip-unneeded target/release/libpam_himmelblau.so

override_dh_auto_test:
	# Skip tests